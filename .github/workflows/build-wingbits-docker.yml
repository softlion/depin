name: Build Wingbits Docker Images

on:
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      GOOSARCH_LIST: "linux-amd64 linux-arm64 linux-386 linux-arm darwin-arm64"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get Wingbits versions
        run: |
          VERSIONS=()
          IMAGEEXISTS=()
          ALLIMAGEEXISTS=true

          for GOOSARCH in $GOOSARCH_LIST; do
            URL="https://install.wingbits.com/$GOOSARCH.json"
            VERSION=$(curl -s "$URL" | grep -o '"Version": "[^"]*"' | cut -d'"' -f4)
            VERSIONS+=("$VERSION")

            IMAGE="vapolia/wingbits:${VERSION}-${GOOSARCH}"
            if docker manifest inspect "$IMAGE" > /dev/null 2>&1; then
              IMAGEEXISTS+=("true")
            else
              IMAGEEXISTS+=("false")
              ALLIMAGEEXISTS=false
            fi
          done

          echo "VERSIONS=${VERSIONS[*]}" >> $GITHUB_ENV
          echo "IMAGEEXISTS=${IMAGEEXISTS[*]}" >> $GITHUB_ENV
          echo "ALLIMAGEEXISTS=$ALLIMAGEEXISTS" >> $GITHUB_ENV

      - name: Build and push Docker images
        if: env.ALLIMAGEEXISTS == 'false'
        run: |
          index=0
          read -r -a VERSIONS_ARRAY <<< "$VERSIONS"
          read -r -a IMAGEEXISTS_ARRAY <<< "$IMAGEEXISTS"
          
          for GOOSARCH in $GOOSARCH_LIST; do

            VERSION="${VERSIONS_ARRAY[$index]}"
            IMAGEEXIST="${IMAGEEXISTS_ARRAY[$index]}"

            if [ "$IMAGEEXIST" = "false" ]; then
                IMAGE="vapolia/wingbits:${VERSION}-${GOOSARCH}"

                echo "Building ${IMAGE}"
                docker build --build-arg GOOSARCH=${GOOSARCH} -t ${IMAGE} -f wingbits/dockerfile .
                docker push ${IMAGE}

                docker tag ${IMAGE} vapolia/wingbits:latest-${GOOSARCH}
                docker push vapolia/wingbits:latest-${GOOSARCH}
            fi

            index=$((index + 1))
          done

      - name: Create and push multi-architecture manifests
        if: env.ALLIMAGEEXISTS == 'false'
        run: |
          # Create a manifest for latest tag
          MANIFEST_LATEST="vapolia/wingbits:latest"
          docker manifest create ${MANIFEST_LATEST} \
            $(for GOOSARCH in $GOOSARCH_LIST; do echo "vapolia/wingbits:latest-${GOOSARCH}"; done)
          docker manifest push ${MANIFEST_LATEST}
