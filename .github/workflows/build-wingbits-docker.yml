name: Build Wingbits Docker Images

on:
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      #linux-386 linux-arm darwin-arm64
      GOOSARCH_LIST: "linux-amd64 linux-arm64"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get Wingbits versions
        run: |
          VERSIONS=()
          IMAGEEXISTS=()
          ALLIMAGEEXISTS=true

          for GOOSARCH in $GOOSARCH_LIST; do
            URL="https://install.wingbits.com/$GOOSARCH.json"
            VERSION=$(curl -s "$URL" | grep -o '"Version": "[^"]*"' | cut -d'"' -f4)
            VERSIONS+=("$VERSION")

            IMAGE="vapolia/wingbits:${VERSION}-${GOOSARCH}"
            if docker manifest inspect "$IMAGE" > /dev/null 2>&1; then
              IMAGEEXISTS+=("true")
            else
              IMAGEEXISTS+=("false")
              ALLIMAGEEXISTS=false
            fi
          done

          echo "VERSIONS=${VERSIONS[*]}" >> $GITHUB_ENV
          echo "IMAGEEXISTS=${IMAGEEXISTS[*]}" >> $GITHUB_ENV
          echo "ALLIMAGEEXISTS=$ALLIMAGEEXISTS" >> $GITHUB_ENV

      - name: Build and push Docker image
        if: env.ALLIMAGEEXISTS == 'false'
        run: |

          VERSION_TAG=$(echo "$VERSIONS" | sed -e 's/ /-/g')
          DOCKER_OS_ARCH_LIST=$(echo $GOOSARCH_LIST | sed -e 's/-/\//g' -e 's/ /,/g')
          docker buildx build --platform $DOCKER_OS_ARCH_LIST -t vapolia/wingbits:latest -t vapolia/wingbits:$VERSION_TAG --push wingbits
